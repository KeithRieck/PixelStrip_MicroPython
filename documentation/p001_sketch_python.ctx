% Enable hyperlinks
\setupinteraction
  [state=start,
  style=,
  color=,
  contrastcolor=]

% make chapter, section bookmarks visible when opening document
\placebookmarks[chapter, section, subsection, subsubsection, subsubsubsection, subsubsubsubsection][chapter, section]
\setupinteractionscreen[option=bookmark]

\setuppagenumbering[location={footer,middle}]
\setupbackend[export=yes]
\setupstructure[state=start,method=auto]

% use microtypography
\definefontfeature[default][default][script=latn, protrusion=quality, expansion=quality, itlc=yes, textitalics=yes, onum=yes, pnum=yes]
\definefontfeature[smallcaps][script=latn, protrusion=quality, expansion=quality, smcp=yes, onum=yes, pnum=yes]
\setupalign[hz,hanging]
\setupitaliccorrection[global, always]

\setupbodyfontenvironment[default][em=italic] % use italic as em, not slanted

\definefallbackfamily[mainface][rm][CMU Serif][preset=range:greek, force=yes]
\definefontfamily[mainface][rm][Latin Modern Roman]
\definefontfamily[mainface][mm][Latin Modern Math]
\definefontfamily[mainface][ss][Latin Modern Sans]
\definefontfamily[mainface][tt][Latin Modern Typewriter][features=none]
\setupbodyfont[mainface]

\setupwhitespace[medium]

\setuphead[chapter]            [style=\tfd\setupinterlinespace,header=empty]
\setuphead[section]            [style=\tfc\setupinterlinespace]
\setuphead[subsection]         [style=\tfb\setupinterlinespace]
\setuphead[subsubsection]      [style=\bf]
\setuphead[subsubsubsection]   [style=\sc]
\setuphead[subsubsubsubsection][style=\it]

\setuphead[chapter, section, subsection, subsubsection, subsubsubsection, subsubsubsubsection][number=no]

\definedescription
  [description]
  [headstyle=bold, style=normal, location=hanging, width=broad, margin=1cm, alternative=hanging]

\setupitemize[autointro]    % prevent orphan list intro
\setupitemize[indentnext=no]

\setupfloat[figure][default={here,nonumber}]
\setupfloat[table][default={here,nonumber}]

\setupxtable[frame=off]
\setupxtable[head][topframe=on,bottomframe=on]
\setupxtable[body][]
\setupxtable[foot][bottomframe=on]


\starttext

\section[title={Sketch graphical programs in
Python},reference={sketch-graphical-programs-in-python}]

\useURL[url1][https://processing.org/][][Processing]\from[url1] is a
graphics library created at MIT to promote programming literacy in the
visual arts. Graphical \quotation{sketches} have been written for data
analysis, games, or artwork. Processing provides an easy introduction to
programming. The structure of the sketches themselves is somewhat
similar to our robot programs. Note that there is both a Java and a
Python option.

We'll be using Processing version 4. Start the Processing application up
and it will display a text editor with an empty sketch. Make sure the
menu on the upper right says \quotation{Python} rather than
\quotation{Java}. If the Python mode is not available, you may need to
install it with the \quotation{Manage Modes} option.

Processing

A sketch should have at least the two basic methods: \type{setup} and
\type{draw}. The \type{setup} method will be called once when the sketch
first starts. Then, the draw method will be called 60 times a second.

Modify the sketch program so setup and draw look like this:

\starttyping
def setup():
    size(640, 480)
    
def draw():
    background(128, 128, 128)
    fill(255, 255, 0)
    stroke(51, 0, 51)
    strokeWeight(3)
    x = 200
    y = 200
    ellipse(x, y, 60, 40)
\stoptyping

Note that colors are usually given as red-green-blue combinations. In
the above example, the background should be gray and the ellipse drawn
in purple but filled with yellow.

Try changing any of the values. Replace numbers with variables. Try
using other Processing commands listed at:
http://processing.org/reference/ Try filling up the window by using
variables within for loops or while loops:

\starttyping
def draw():
    background(128, 128, 128)
    for x in range(10, 640, 50):
        for y in range(10, 480, 30):
            fill(x % 256, y // 4, 128)
            ellipse(x, y, 60, 40)
\stoptyping

The \type{draw} method is called repeatedly, so you can animate the
picture by changing the picture a little each time. Try the following,
and then explain what it's doing. Note that we are mixing integers with
floating point numbers.

\starttyping
def draw():
    background(128, 128, 128)
    time = millis() / 1000.0
    radius = 100 + 50 * sin(time * 3.14159)
    ellipse(320, 240, radius, radius)
\stoptyping

Try drawing multiple ellipses. Try making them pulse at different rates.
The following example also shows movement:

\starttyping
x = 10
y = 20
def draw():
    global x, y
    background(128, 128, 128)
    rect(x, y, 30, 30);
    x = (x + 2) % width;
    y = (y + 1) % height;
\stoptyping

Note that the \type{x} and \type{y} variables are no longer inside the
\type{draw} method. They are \type{global} variables, which allows them
to retain their value after the method has finished. Change the code to
make the square bounce off the walls.

\thinrule

\subsection[title={Other Things to
Try:},reference={other-things-to-try}]

\startitemize[packed]
\item
  Draw a picture. E.g. a face, a car, a spaceship, a robot, a tree.
\item
  Try integrating one of Processing's dynamic variables: mouseX, key,
  mouseButton
\item
  Make multiple moving ellipses, or rectangles, or whole pictures.
\item
  Try some of the Example sketches listed under the File menu.
\stopitemize

\subsection[title={References:},reference={references}]

\startitemize[packed]
\item
  Processing: https://processing.org/
\item
  Python Tutorial: https://docs.python.org/3/tutorial/
\item
  Processing Tutorial: https://www.youtube.com/watch?v=5N31KNgOO0g
\stopitemize

\stoptext
