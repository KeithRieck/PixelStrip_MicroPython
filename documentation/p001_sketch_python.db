<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article>
<article
  xmlns="http://docbook.org/ns/docbook" version="5.0"
  xmlns:xlink="http://www.w3.org/1999/xlink" >
  <info>
    <title></title>
  </info>
  <section xml:id="sketch-graphical-programs-in-python">
    <title>Sketch graphical programs in Python</title>
    <para>
      <link xlink:href="https://processing.org/">Processing</link> is a
      graphics library created at MIT to promote programming literacy in
      the visual arts. Graphical <quote>sketches</quote> have been
      written for data analysis, games, or artwork. Processing provides
      an easy introduction to programming. The structure of the sketches
      themselves is somewhat similar to our robot programs. Note that
      there is both a Java and a Python option.
    </para>
    <para>
      We’ll be using Processing version 4. Start the Processing
      application up and it will display a text editor with an empty
      sketch. Make sure the menu on the upper right says
      <quote>Python</quote> rather than <quote>Java</quote>. If the
      Python mode is not available, you may need to install it with the
      <quote>Manage Modes</quote> option.
    </para>
    <para>
      Processing
    </para>
    <para>
      A sketch should have at least the two basic methods:
      <literal>setup</literal> and <literal>draw</literal>. The
      <literal>setup</literal> method will be called once when the
      sketch first starts. Then, the draw method will be called 60 times
      a second.
    </para>
    <para>
      Modify the sketch program so setup and draw look like this:
    </para>
    <programlisting language="python">
def setup():
    size(640, 480)
    
def draw():
    background(128, 128, 128)
    fill(255, 255, 0)
    stroke(51, 0, 51)
    strokeWeight(3)
    x = 200
    y = 200
    ellipse(x, y, 60, 40)
</programlisting>
    <para>
      Note that colors are usually given as red-green-blue combinations.
      In the above example, the background should be gray and the
      ellipse drawn in purple but filled with yellow.
    </para>
    <para>
      Try changing any of the values. Replace numbers with variables.
      Try using other Processing commands listed at:
      http://processing.org/reference/ Try filling up the window by
      using variables within for loops or while loops:
    </para>
    <programlisting language="python">
def draw():
    background(128, 128, 128)
    for x in range(10, 640, 50):
        for y in range(10, 480, 30):
            fill(x % 256, y // 4, 128)
            ellipse(x, y, 60, 40)
</programlisting>
    <para>
      The <literal>draw</literal> method is called repeatedly, so you
      can animate the picture by changing the picture a little each
      time. Try the following, and then explain what it’s doing. Note
      that we are mixing integers with floating point numbers.
    </para>
    <programlisting language="python">
def draw():
    background(128, 128, 128)
    time = millis() / 1000.0
    radius = 100 + 50 * sin(time * 3.14159)
    ellipse(320, 240, radius, radius)
</programlisting>
    <para>
      Try drawing multiple ellipses. Try making them pulse at different
      rates. The following example also shows movement:
    </para>
    <programlisting language="python">
x = 10
y = 20
def draw():
    global x, y
    background(128, 128, 128)
    rect(x, y, 30, 30);
    x = (x + 2) % width;
    y = (y + 1) % height;
</programlisting>
    <para>
      Note that the <literal>x</literal> and <literal>y</literal>
      variables are no longer inside the <literal>draw</literal> method.
      They are <literal>global</literal> variables, which allows them to
      retain their value after the method has finished. Change the code
      to make the square bounce off the walls.
    </para>
    <section xml:id="other-things-to-try">
      <title>Other Things to Try:</title>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Draw a picture. E.g. a face, a car, a spaceship, a robot, a
            tree.
          </para>
        </listitem>
        <listitem>
          <para>
            Try integrating one of Processing’s dynamic variables:
            mouseX, key, mouseButton
          </para>
        </listitem>
        <listitem>
          <para>
            Make multiple moving ellipses, or rectangles, or whole
            pictures.
          </para>
        </listitem>
        <listitem>
          <para>
            Try some of the Example sketches listed under the File menu.
          </para>
        </listitem>
      </itemizedlist>
    </section>
    <section xml:id="references">
      <title>References:</title>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Processing: https://processing.org/
          </para>
        </listitem>
        <listitem>
          <para>
            Python Tutorial: https://docs.python.org/3/tutorial/
          </para>
        </listitem>
        <listitem>
          <para>
            Processing Tutorial:
            https://www.youtube.com/watch?v=5N31KNgOO0g
          </para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
</article>
